{"version":3,"file":"app.js","names":["express","require","path","bodyParser","mongoose","cors","multer","session","mongoDBStore","User","errorController","compression","config","Server","http","cookieParser","MONGODB_URI","process","env","DB_USERNAME","DB_PWD","app","use","store","uri","collection","productRoute","userRoute","shopRoute","chatRoute","fileStorage","diskStorage","destination","req","file","cb","filename","Date","now","originalname","fileFilter","mimetype","json","origin","credentials","storage","array","secret","resave","saveUninitialized","res","next","user","findById","_id","then","catch","err","console","log","static","join","__dirname","get404","server","createServer","io","methods","on","socket","id","data","to","roomId","emit","connect","result","listen","PORT"],"sources":["../app.js"],"sourcesContent":["const express = require(\"express\");\r\nconst path = require(\"path\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst mongoose = require(\"mongoose\");\r\nconst cors = require(\"cors\");\r\nconst multer = require(\"multer\");\r\nconst session = require(\"express-session\");\r\nconst mongoDBStore = require(\"connect-mongodb-session\")(session);\r\nconst User = require(\"./model/user\");\r\nconst errorController = require(\"./controller/error\");\r\nconst compression = require(\"compression\");\r\nrequire(\"dotenv\").config();\r\nconst { Server } = require(\"socket.io\");\r\nconst http = require(\"http\");\r\nconst cookieParser = require(\"cookie-parser\");\r\n\r\nconst MONGODB_URI = `mongodb+srv://${process.env.DB_USERNAME}:${process.env.DB_PWD}@cluster0.w6b2e9t.mongodb.net/?retryWrites=true&w=majority`;\r\n\r\nconst app = express();\r\napp.use(cookieParser());\r\n\r\nconst store = new mongoDBStore({\r\n  uri: MONGODB_URI,\r\n  collection: \"sessions\",\r\n});\r\n\r\nconst productRoute = require(\"./route/product\");\r\nconst userRoute = require(\"./route/user\");\r\nconst shopRoute = require(\"./route/shop\");\r\nconst chatRoute = require(\"./route/chat\");\r\n\r\nconst fileStorage = multer.diskStorage({\r\n  destination: (req, file, cb) => {\r\n    return cb(null, \"./Images\");\r\n  },\r\n  filename: (req, file, cb) => {\r\n    return cb(null, Date.now() + \"_\" + file.originalname);\r\n  },\r\n});\r\n\r\nconst fileFilter = (req, file, cb) => {\r\n  if (\r\n    file.mimetype === \"image/png\" ||\r\n    file.mimetype === \"image/jpg\" ||\r\n    file.mimetype === \"image/jpeg\"\r\n  ) {\r\n    cb(null, true);\r\n  } else {\r\n    cb(null, false);\r\n  }\r\n};\r\napp.use(express.json());\r\napp.use(\r\n  cors({\r\n    origin: true,\r\n    credentials: true,\r\n  })\r\n);\r\n\r\napp.use(\r\n  multer({ storage: fileStorage, fileFilter: fileFilter }).array(\"image\")\r\n);\r\n\r\napp.use(compression());\r\napp.use(\r\n  session({\r\n    secret: \"keyboard cat\",\r\n    resave: false,\r\n    saveUninitialized: false,\r\n    store: store,\r\n    \r\n  })\r\n);\r\n app.use((req, res, next) => {\r\n  if (!req.session.user) {\r\n     next();\r\n  }else{\r\n  User.findById(req.session.user._id)\r\n    .then((user) => {\r\n      req.user = user;\r\n      next();\r\n    })\r\n    .catch((err) => console.log(err));}\r\n}); \r\napp.use(\"/Images\", express.static(path.join(__dirname, \"./Images\")));\r\napp.use(\"/user\", userRoute);\r\napp.use(shopRoute);\r\napp.use(\"/products\", productRoute);\r\napp.use(\"/chatrooms\", chatRoute);\r\napp.use(errorController.get404);\r\nconst server = http.createServer(app);\r\n\r\nconst io = new Server(server, {\r\n  cors: {\r\n    origin: [\"http://localhost:3000\", \"http://localhost:3001\"],\r\n    methods: [\"GET\", \"POST\"],\r\n  },\r\n});\r\n\r\nio.on(\"connection\", (socket) => {\r\n  socket.on(\"join_room\", (id) => {\r\n    socket.join(id);\r\n  });\r\n  socket.on(\"send_message\", (data) => {\r\n    socket.to(data.roomId).emit(\"receive_message\", data);\r\n  });\r\n\r\n  socket.on(\"disconnect\", () => {\r\n    console.log(`disconnect: ${socket.id}`);\r\n  });\r\n});\r\n\r\nmongoose\r\n  .connect(MONGODB_URI)\r\n  .then((result) => {\r\n    server.listen(process.env.PORT || 5000);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n"],"mappings":"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"}